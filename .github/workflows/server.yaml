name: server

on:
  push:
    paths:
      - ".github/**"
      - "server/**"
      - "!server/.devcontainer/**"
  pull_request:
    paths:
      - ".github/**"
      - "server/**"
      - "!server/.devcontainer/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.57
      - name: Set up Rust cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./target/
          key: ${{ runner.os }}-${{ github.workflow }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-${{ github.workflow }}-rust
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Set up Docker registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build app
        working-directory: ./server/app
        env:
          SENTRY_ORG: ${{ secrets.SERVER_SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SERVER_SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SERVER_SENTRY_AUTH_TOKEN }}
        run: |
          yarn -s install
          yarn -s build
      - name: Build server
        working-directory: ./server
        run: cargo build --release
      - name: Generate tags
        id: generate-tags
        uses: hulloitskai/generate-docker-tags-action@v0.2.1
        with:
          repo: ghcr.io/chalmersproject/signal-monitor-server
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: ./server
          push: true
          tags: ${{ steps.generate-tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
